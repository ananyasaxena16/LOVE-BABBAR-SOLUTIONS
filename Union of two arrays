class Solution{
    //Union
    public static int doUnion(int a[], int n, int b[], int m) 
    {
        int count = 0;
        HashSet<Integer> hm = new HashSet<>();
        for(int i = 0; i<n; i++)
        {
            if(!hm.contains(a[i])){
                hm.add(a[i]);
                
            }
        }//Your code here
        for(int j = 0; j<m; j++)
        {
            if(!hm.contains(b[j])){
                hm.add(b[j]);
            }
        }
        return hm.size();
    }
    
    
    //Intersection
    public static int printIntersection(int arr1[], int arr2[], int m, int n)
    {
    int i = 0, j = 0, count=0;
    while (i < m && j < n) {
        if (arr1[i] < arr2[j])
            i++;
        else if (arr2[j] < arr1[i])
            j++;
        else /* if arr1[i] == arr2[j] */
        {
            count++;
            i++;
            j++;
        }
    }
    return count;
    }
}
